openapi: 3.0.3
info:
  title: DM Seer
  description: |-
    API for DM Seer.
  termsOfService: https://www.beholderconflux.com/terms/
  contact:
    email: don@kittle.ca
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
  - url: https://dndcombat.run/api
tags:
  - name: encounter
    description: A planned combat encounter
  - name: creature
    description: A creature, including named NPCs
  - name: character
    description: Operations about user
paths:
  /encounters:
    get:
      tags:
        - encounter
      summary: Find encounter by ID
      description: Returns all encounters for the user
      operationId: getEncounters
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfEncounters'
        '400':
          description: Invalid ID supplied
        '404':
          description: Encounter not found
      security:
        - api_key: []
        - petstore_auth:
            - read:encounters
  /encounter:
    put:
      tags:
        - encounter
      summary: Update an existing encounter
      description: Update an existing encounter by Id
      operationId: updateEncounter
      requestBody:
        description: Update an existent encounter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Encounter'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Encounter'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Encounter not found
        '405':
          description: Validation exception
      security:
        - petstore_auth:
            - write:encounters
            - read:encounters
    post:
      tags:
        - encounter
      summary: Add a new encounter
      description: Add a new encounter
      operationId: addEncounter
      requestBody:
        description: Create a new encounter
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Encounter'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Encounter'
        '405':
          description: Invalid input
      security:
        - petstore_auth:
            - write:encounters
            - read:encounters
  /encounter/{encounterId}:
    get:
      tags:
        - encounter
      summary: Find encounter by ID
      description: Returns a single encounter
      operationId: getEncounterById
      parameters:
        - name: encounterId
          in: path
          description: ID of encounter to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Encounter'          
        '400':
          description: Invalid ID supplied
        '404':
          description: Encounter not found
      security:
        - api_key: []
        - petstore_auth:
            - write:encounters
            - read:encounters
    delete:
      tags:
        - encounter
      summary: Deletes an encounter
      description: delete an encounter
      operationId: deleteEncounter
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: encounterId
          in: path
          description: Encounter id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid encounter value
      security:
        - petstore_auth:
            - write:encounters
            - read:encounters
components:
  schemas:
    Location:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 103
        name:
          type: string
          example: Triboar Trail
    Campaign:
      required:
        - id
        - name
        - official
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Lost Mine of Phandelver
        official:
          type: boolean
          example: true
    Encounter:
      required:
        - id
        - name
        - suggestedAPL
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1023
        name:
          type: string
          example: Goblin Amblush
        campaign:
          $ref: '#/components/schemas/Campaign'
        location:
          $ref: '#/components/schemas/Location'
        suggestedAPL:
          type: integer
          format: int32
          description: Suggested average party level
          example: 1
    ArrayOfEncounters:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          name:
            type: string
          campaign:
            type: string
          location:
            type: string
          suggestedAPL:
            type: integer
      example:
        - id: 107
          name: Kennel
          campaign: Lost Mine of Phandelver
          location: Cragmaw Hideout
          suggestedAPL: 1
        - id: 201
          name: Tresendar Crypts
          campaign: Lost Mine of Phandelver
          location: Redbrand Hideout
          suggestedAPL: 2
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 0
        type:
          type: string
          example: createEncounter
        message:
          type: string
          example: Encounter created.
  requestBodies:
    Encounter:
      description: Encounter object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Encounter'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:encounters: modify encounters in your account
            read:encounters: read encounters
    api_key:
      type: apiKey
      name: api_key
      in: header
